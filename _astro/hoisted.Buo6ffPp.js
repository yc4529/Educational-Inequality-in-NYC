import{m as p}from"./maplibre-gl.CwxBg0Yq.js";import"./hoisted.RlhmG3H2.js";class u extends HTMLElement{constructor(){super();var o=new p.Map({container:this.dataset.container||"maplibre-map-inline",interactive:this.dataset.interactive?JSON.parse(this.dataset.interactive):!1,center:[this.dataset.longitude?parseFloat(this.dataset.longitude):0,this.dataset.latitude?parseFloat(this.dataset.latitude):0],zoom:this.dataset.zoom?parseFloat(this.dataset.zoom):void 0,style:this.dataset.mapstyle});o.on("load",()=>{this.dataset.layers&&JSON.parse(this.dataset.layers).forEach(e=>{if(fetch(e.url).then(s=>s.json()).then(s=>{s.features.forEach(a=>{a.geometry||(a.geometry={type:"Point",coordinates:[Number(a.properties.longitude),Number(a.properties.latitude)]})}),o.addSource(e.id,{type:e["data-type"],data:s}),o.addLayer({id:e.id,type:e["layer-type"],source:e.id,paint:e.paint||{}})}),e.mouseEvent){const s=new p.Popup({offset:15});e.mouseEvent.forEach(a=>{o.on(a.type,e.id,i=>{const d=a.content.map(n=>{const r=Object.keys(n)[0],l=Array.isArray(n[r])?n[r].map(t=>{if("property"in t)return i.features&&i.features[0]&&i.features[0].properties[t.property]||t.else;if("str"in t)return t.str;if(r==="a"&&"href"in t&&"text"in t)return`<a href="${t.href}" target="_blank">${t.text}</a>`;if(r==="img"&&"src"in t){const c=t.alt||"";return`<img src="${t.src}" alt="${c}" />`}else return""}).join(" "):[n[r]];return`<${r}>${l}</${r}>`}).join(" ");s.setLngLat(i.lngLat).setHTML(d).addTo(o),a.callback&&a.callback(i),a.type==="mousemove"&&o.on("mouseleave",e.id,()=>{s.remove()})})})}})})}}window.customElements.define("maplibre-map-inline",u);
